[tool.poetry]
name = "base"
version = "0.0.1"
description = "Short description of the project and the package"
authors = ["Andrea Guzzo"]
license = "MIT"
homepage = ""
repository = ""
documentation = ""
keywords = [
    "Base",
    "Project",
    "Template",
]

[build-system]
requires = ["poetry-core>=1.3.1"]
build-backend = "poetry.core.masonry.api"
# If you want to use PDM for build instead poetry
# requires = ["pdm-pep517>=1.0.0"]
# build-backend = "pdm.pep517.api"

[[tool.poetry.source]]
name = "pypi.org"
url = "https://pypi.org/simple"
default = true

# [[tool.poetry.source]]
# name = "private"
# url = "https://github.com"
# secondary = true

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.dev]
optional = true

[tool.poetry.dependencies]
python = ">=3.9.8, <=3.11"
detect-secrets="^1.4.0"
ecs-logging = "^2.0.0"
fastapi = "^0.92.0"
gunicorn = "^20.1.0"
loguru = "^0.6.0"
numpy = "^1.24.2"
pandas = "^1.5.3"
pre-commit = "^3.1.1"
pyaml="^21.10.1"
pydantic="^1.10.4"
python-dotenv="^0.21.0"
Unidecode="^1.3.6"
uvicorn = "^0.20.0"

[tool.poetry.group.docs.dependencies]
mkdocs="^1.4.2"
mkdocs-autorefs="^0.4.1"
mkdocs-gallery="^0.7.6"
mkdocs-jupyter="^0.22.0"
mkdocs-macros-plugin="^0.7.0"
mkdocs-material="^8.5.11"
mkdocs-minify-plugin="^0.6.2"
mkdocs-redirects="^1.2.0"
mkdocstrings="^0.19.1"
mkdocstrings-python="^0.8.3"

[tool.poetry.group.dev.dependencies]
autoflake = "^2.0.0"
autopep8 = "^2.0.1"
bandit = "^1.7.4"
black = "^22.12.0"
commitizen = "^2.39.1"
cookiecutter = "^2.1.1"
deptry = "^0.7.1"
flake8 = "^6.0.0"
flake8-bandit = "^4.1.1"
flake8-builtins = "^2.1.0"
flake8-isort = "^6.0.0"
ipython = "^8.8.0"
jupyter = "^1.0.0"
mypy = "^0.991"
pylint = "^2.15.9"
pytest = "^6.2.5"
pytest-cov = "^4.0.0"
ruff = "^0.0.213"
types-PyYAML="^6.0.12.2"
types-requests="^2.28.11.7"
types-urllib3="^1.26.25.4"

[project]
name = "base"
version = "0.0.1"
description = "Short description of the project and the package"
authors = [{name="Andrea Guzzo"}]
dependencies = [
    "pyaml>=21.10.1",
    "Unidecode>=1.3.6",
    "python-dotenv>=0.21.0",
    "pydantic>=1.10.4",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.11",
    "mkdocs-macros-plugin>=0.7.0",
    "mkdocstrings>=0.19.1",
    "mkdocstrings-python>=0.8.3",
    "mkdocs-autorefs>=0.4.1",
    "mkdocs-redirects>=1.2.0",
    "mkdocs-jupyter>=0.22.0",
    "mkdocs-gallery>=0.7.6",
    "types-urllib3>=1.26.25.4",
    "types-requests>=2.28.11.7",
    "types-PyYAML>=6.0.12.2",
    "mkdocs-minify-plugin>=0.6.2",
    "pandas>=1.5.2",
    "numpy>=1.24.1",
    "loguru>=0.6.0",
    "ecs-logging>=2.0.0"
]
requires-python = ">=3.9.8,<3.11.1"
license = {text = "MIT"}
keywords = [
    "Base",
    "Project",
    "Template",
]
[project.urls]
homepage = ""
repository = ""
documentation = ""

[tool.pdm.build]
includes = []

[[tool.pdm.source]]
name = "pypi.org"
url = "https://pypi.org/simple"
verify_ssl = true

[tool.pdm]
[tool.pdm.dev-dependencies]
dev = [
    "flake8>=6.0.0",
    "flake8-isort>=6.0.0",
    "flake8-builtins>=2.1.0",
    "autopep8>=2.0.1",
    "pylint>=2.15.9",
    "bandit>=1.7.4",
    "flake8-bandit>=4.1.1",
    "autoflake>=2.0.0",
    "pytest-cov>=4.0.0",
    "ipython>=8.8.0",
    "commitizen>=2.39.1",
    "jupyter>=1.0.0",
    "mypy>=0.991",
    "cookiecutter<3.0.0,>=2.1.1",
    "black>=22.12.0",
    "ruff>=0.0.213",
    "pytest>=6.2.5",
    "pre-commit>=2.21.0",
    "deptry>=0.7.1",
]

# --- Plugins configurations --------------------------------------------- #
[tool.black]
line-length = 120
target-version = ['py37']
preview = true

[tool.mypy]
# files = [""]
plugins = ["pydantic.mypy", "sqlmypy"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
ignore_missing_imports = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"
exclude = ['volumes/', "alembic/", "scripts/", "docs/", "settings/", ".vscode/", ".venv/", ".pytest_cache/", ".mypy_cache/", ".gitlab/", ".github/", ".devcontainer/", "Docker/", "dashboards/"]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 120
profile = "black"

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["app"]

[tool.pytest.ini_options]
markers = [
    "functions: mark test for the base functionalities",
    "core: all about the core",
    "db: all about the database",
    "api: all about the api of the system",
]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$major.$minor.$patch$prerelease"
version = "0.1.0"
version_files = [
    "__version__.py",
    "pyproject.toml:version"
]
style = [
    ["qmark", "fg:#ff9d00 bold"],
    ["question", "bold"],
    ["answer", "fg:#ff9d00 bold"],
    ["pointer", "fg:#ff9d00 bold"],
    ["highlighted", "fg:#ff9d00 bold"],
    ["selected", "fg:#cc5454"],
    ["separator", "fg:#cc5454"],
    ["instruction", ""],
    ["text", ""],
    ["disabled", "fg:#858585 italic"]
]

[tool.ruff]
line-length = 120
format      = "grouped"
# Assume Python 3.9.
target-version = "py39"
# Enable Pyflakes `E` and `F` codes by default.
select = [
    "A",
    # "ANN",
    "ARG",
    "B",
    "BLE",
    "C",
    "C4",
    "C90",
    "D",
    "DTZ",
    "E",
    "EM",
    "ERA",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PD",
    "PGH",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "PT",
    "Q",
    "RET",
    "RUF",
    "S",
    "SIM",
    "T",
    "T10",
    "T20",
    "TID",
    "UP",
    "W",
    "YTT",]
# Never enforce `E501` (line length violations).
ignore = ["BLE001", "D203", "D213", "D417", "E501"]
# Always autofix, but never try to fix `F401` (unused imports).
fix     = true
unfixable = ["F401"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# # Exclude a variety of commonly ignored directories (you can have some problems)
# exclude = [
#     ".direnv",
#     ".eggs",
#     ".git",
#     ".hg",
#     ".mypy_cache",
#     ".nox",
#     ".pants.d",
#     ".ruff_cache",
#     ".svn",
#     ".tox",
#     ".venv",
#     "__pypackages__",
#     "_build",
#     "buck-out",
#     "build",
#     "dist",
#     "node_modules",
#     "venv",
# ]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.per-file-ignores]
"__init__.py" = ["D104"]
"test*.py"    = ["S101", "T201"]
